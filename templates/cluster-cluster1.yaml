{{- if .Values.opsManager.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-ops-manager-project
  namespace: {{ .Release.Namespace }}
  labels:
    product: {{ .Chart.Name }}
data:
  projectName: {{ .Release.Name }}
  baseUrl:  http://{{ .Release.Name }}-ops-manager-svc.{{ .Release.Namespace }}.svc.cluster.local:8080
  credentials: {{ .Release.Name }}-ops-manager-admin-key
{{- end }}
---
apiVersion: mongodb.com/v1
kind: MongoDB
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    product: {{ .Chart.Name }}
spec:
  members: {{ .Values.mongodb.cluster.members }}
  type: ReplicaSet
  version: {{ .Values.mongodb.cluster.version }}
  clusterDomain: {{ .Values.mongodb.cluster.clusterDomain }}
  service: {{ .Release.Name }}
  {{- if .Values.opsManager.enabled }}
  opsManager:
    configMapRef:
      name: {{ .Release.Name }}-ops-manager-project
  credentials: {{ .Release.Name }}-ops-manager-admin-key
  {{- else }}
  cloudManager:
    configMapRef:
      name: {{ .Release.Name }}-cloud-manager-project
  credentials: {{ .Release.Name }}-cloud-manager-secret
  {{- end }}
  logLevel: WARN
  persistent: true
{{- with .Values.podSpec }}
  podSpec:
    {{- toYaml . | nindent 4 }}
{{- end }}
    {{- if .Values.mongodb.nodeRole }}
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/role 
              operator: In
              values:
              - mongodb-node 
    {{- end }}
